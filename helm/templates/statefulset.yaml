apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nacos
spec:
  serviceName: nacos-headless
  replicas: {{ .Values.nacos.replicas }}
  template:
    metadata:
      labels:
        app: nacos
    spec:
      terminationGracePeriodSeconds: 10  #配置优雅停机时间
      serviceAccountName: nacos-admin    #分配服务账户给应用，方便应用能够获取一定的权限
      initContainers:                    #初始化镜像执行初始化操作
        - name: peer-finder-plugin-install
          image: {{.Values.nacos.image.initContainerImage }}
          volumeMounts:
            - mountPath: "/home/nacos/plugins/peer-finder"
              name: plugindir
      affinity:    #配置Pod反亲和性，放置Pod都起在同一节点上（如果都在一个节点，节点宕机将会使全部实例不可用）
        podAntiAffinity:
        {{- if eq .Values.nacos.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution true}}
          requiredDuringSchedulingIgnoredDuringExecution: #硬策略，pod一定不能启在同一个节点上
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - nacos
        {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:  #软策略，尽可能pod不启在同一个节点上
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - nacos
        {{- end }}
      containers:
        - name: nacos
          image: {{.Values.nacos.image.nacosImage}}
          resources:
            limits:
              cpu: {{ .Values.nacos.resources.limits.cpu | quote}}
              memory: {{ .Values.nacos.resources.limits.memory |quote}}
            requests:
              cpu: {{ .Values.nacos.resources.requests.cpu |quote}}
              memory: {{.Values.nacos.resources.requests.memory |quote}}
          ports:
            - name: client-port
              containerPort: 8848
            - name: rpc
              containerPort: 7848
          envFrom:
            - configMapRef:
                name: nacos-config
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: plugindir
              mountPath: /home/nacos/plugins/peer-finder
            - name: datadir
              mountPath: /home/nacos/data
            - name: logdir
              mountPath: /home/nacos/logs
  volumeClaimTemplates:
    - metadata:
        name: plugindir
      spec:
        storageClassName: {{ .Values.nacos.persistence.storageClass.name }} #指定storageclass名称，这里需要根据你的K8S集群进行修改
        accessModes: ["ReadWriteMany"]
        resources:
          requests:
            storage: {{ .Values.nacos.persistence.storage.plugindir | default "5Gi" }}
    - metadata:
        name: datadir
      spec:
        storageClassName: {{ .Values.nacos.persistence.storageClass.name}}
        accessModes: ["ReadWriteMany"]
        resources:
          requests:
            storage: {{ .Values.nacos.persistence.storage.datadir| default "5Gi"}}
    - metadata:
        name: logdir
      spec:
        storageClassName: {{ .Values.nacos.persistence.storageClass.name }}
        accessModes: ["ReadWriteMany"]
        resources:
          requests:
            storage: {{ .Values.nacos.persistence.storage.logdir | default "5Gi"}}
  selector:
    matchLabels:
      app: nacos